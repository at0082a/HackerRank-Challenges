The look-and-say sequence is generated by describing each group of identical digits in the previous term. If we start at "1", the first five terms in the sequence are:

"1" = "one 1" = "11"
"11" = "two 1's" = "21"
"21" = "one 2, one 1" = "1211"
"1211" = "one 1, one 2, two 1's" = "111221"
"111221" = "three 1's, two 2's, one 1" = "312211"

Given a term (as a string), return the next term in the sequence.

function lookAndSay(term) {
	let arr = [term[0]];
	for (let i = 1; i < term.length; i++) {
		if (term[i] === term[i - 1])
			arr.push(term[i])
		else {
			arr.push(' ');
			arr.push(term[i])
		}
	}
	return arr.join('').split(' ').map(el => `${el.length}${el[0]}`).join('');
}
